name: Manual Azure Deployment

on:
  workflow_dispatch:  # This allows manual triggering
    inputs:
      resource_group:
        description: 'Azure Resource Group Name'
        required: true
        default: 'blogauto-dev-rg'
      project_name:
        description: 'Project Name'
        required: true
        default: 'blogauto'
      environment:
        description: 'Environment (dev, test, prod)'
        required: true
        default: 'dev'
      location:
        description: 'Azure Region'
        required: true
        default: 'eastus'

env:
  AZURE_FUNCTIONAPP_NAME: "${{ github.event.inputs.project_name }}-${{ github.event.inputs.environment }}-function"
  PYTHON_VERSION: '3.11'
  RESOURCE_GROUP: "${{ github.event.inputs.resource_group }}"
  LOCATION: "${{ github.event.inputs.location }}"
  ENVIRONMENT: "${{ github.event.inputs.environment }}"
  PROJECT_NAME: "${{ github.event.inputs.project_name }}"

jobs:
  deploy-infra:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Create resource group if not exists
      run: |
        az group create --name "${{ github.event.inputs.resource_group }}" --location "${{ github.event.inputs.location }}"
        
    - name: Deploy Bicep
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        resourceGroupName: "${{ github.event.inputs.resource_group }}"
        template: ./infra/main.bicep
        parameters: >
          projectName="${{ github.event.inputs.project_name }}" 
          environment="${{ github.event.inputs.environment }}" 
          location="${{ github.event.inputs.location }}"
        deploymentName: 'github-manual-${{ github.run_number }}'
        failOnStdErr: false

  deploy-function:
    runs-on: ubuntu-latest
    needs: deploy-infra
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f src/requirements.txt ]; then
          pip install -r src/requirements.txt
        else
          echo "Warning: src/requirements.txt not found"
        fi
        pip install azure-functions
        
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: Debug Environment
      run: |
        echo "Function App Name: ${{ env.AZURE_FUNCTIONAPP_NAME }}"
        echo "Python Version: ${{ env.PYTHON_VERSION }}"
        echo "Environment: ${{ env.ENVIRONMENT }}"
        echo "Resource Group: ${{ env.RESOURCE_GROUP }}"
        echo "Project Name: ${{ env.PROJECT_NAME }}"
      
    - name: Deploy Function App
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: src
        scm-do-build-during-deployment: true
        enable-oryx-build: true
        respect-pom-xml: false
        respect-funcignore: false
      env:
        AZURE_FUNCTIONAPP_PACKAGE_PATH: src
        PYTHON_VERSION: ${{ env.PYTHON_VERSION }}